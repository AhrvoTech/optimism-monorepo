name: Build and Publish to NPM

on:
  push:
    branches:
      - published

jobs:
  publish:
    name: Run CI and Publish to NPM
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - name: Setup node
        uses: actions/setup-node@v1

      # START DEPENDENCY CACHING
      - name: Cache root deps
        uses: actions/cache@v1
        id: cache_base
        with:
          path: node_modules
          key: ${{ runner.os }}-${{ hashFiles('package.json') }}

      - name: Cache core-db deps
        uses: actions/cache@v1
        id: cache_core-db
        with:
          path: packages/core-db/node_modules
          key: ${{ runner.os }}-${{ hashFiles('packages/core-db/package.json') }}

      - name: Cache core-utils deps
        uses: actions/cache@v1
        id: cache_core-utils
        with:
          path: packages/core-utils/node_modules
          key: ${{ runner.os }}-${{ hashFiles('packages/core-utils/package.json') }}

      - name: Cache contracts deps
        uses: actions/cache@v1
        id: cache_contracts
        with:
          path: packages/contracts/node_modules
          key: ${{ runner.os }}-${{ hashFiles('packages/contracts/package.json') }}

      - name: Cache rollup-core deps
        uses: actions/cache@v1
        id: cache_rollup-core
        with:
          path: packages/rollup-core/node_modules
          key: ${{ runner.os }}-${{ hashFiles('packages/rollup-core/package.json') }}

      - name: Cache state-synchronizer deps
        uses: actions/cache@v1
        id: cache_state-synchronizer
        with:
          path: packages/state-synchronizer/node_modules
          key: ${{ runner.os }}-${{ matrix.node }}-${{ hashFiles('packages/state-synchronizer/package.json') }}

      - name: Cache ovm-toolchain deps
        uses: actions/cache@v1
        id: cache_ovm-toolchain
        with:
          path: packages/ovm-toolchain/node_modules
          key: ${{ runner.os }}-${{ hashFiles('packages/ovm-toolchain/package.json') }}

      # END DEPENDENCY CACHING

      - name: Install Dependencies
        run: yarn install

      - name: Build
        run: |
          yarn clean
          yarn build

      - name: Configure git
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"

      - name: Publish
        run: yarn run release:patch
        env:
          NODE_AUTH_TOKEN: ${{secrets.NODE_AUTH_TOKEN}}

      - name: Push changes
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
